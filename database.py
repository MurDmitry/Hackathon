import sqlite3
import os
from datetime import datetime

def init_db():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    conn = get_db_connection()
    cursor = conn.cursor()
    
    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS users (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            telegram_id INTEGER UNIQUE,
            first_name TEXT,
            username TEXT,
            is_moderator BOOLEAN DEFAULT FALSE,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    
    # –ò–¥–µ–∏
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS ideas (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            user_id INTEGER,
            description TEXT NOT NULL,
            justification TEXT,
            evidence_link TEXT,
            is_anonymous BOOLEAN DEFAULT FALSE,
            status TEXT DEFAULT 'pending',
            saved_amount INTEGER,
            moderator_comment TEXT,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            approved_at TIMESTAMP,
            FOREIGN KEY (user_id) REFERENCES users (id)
        )
    ''')
    
    # –õ–∞–π–∫–∏
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS likes (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            idea_id INTEGER,
            user_id INTEGER,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            UNIQUE(idea_id, user_id),
            FOREIGN KEY (idea_id) REFERENCES ideas (id),
            FOREIGN KEY (user_id) REFERENCES users (id)
        )
    ''')
    
    # –ü—Ä–æ–≤–µ—Ä–∏–º —á—Ç–æ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–ª–∏—Å—å
    cursor.execute("SELECT name FROM sqlite_master WHERE type='table'")
    tables = cursor.fetchall()
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü—ã –ø—É—Å—Ç—ã–µ
    cursor.execute('SELECT COUNT(*) FROM ideas')
    ideas_count = cursor.fetchone()[0]
    
    if ideas_count == 0:
        add_test_data(cursor)
    
    conn.commit()
    conn.close()

def add_test_data(cursor):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    test_users = [
        (111111111, '–ê—Ä—Å–µ–Ω–∏–π –ú–æ–∏—Å–µ–µ–≤', 'arseny_m', True),
        (222222222, '–î–º–∏—Ç—Ä–∏–π –ú—É—Ä–∑–∞–µ–≤', 'dmitry_m', False),
        (333333333, '–ü–æ–ª–∏–∫–∞—Ä–ø–æ–≤–∞ –¢–∞–∏—Å–∏—è', 'taisiya_p', False),
    ]
    
    cursor.executemany('''
        INSERT OR IGNORE INTO users (telegram_id, first_name, username, is_moderator)
        VALUES (?, ?, ?, ?)
    ''', test_users)
    
    # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    user_ids = {}
    for telegram_id, first_name, username, is_moderator in test_users:
        cursor.execute('SELECT id FROM users WHERE telegram_id = ?', (telegram_id,))
        result = cursor.fetchone()
        if result:
            user_ids[telegram_id] = result[0]
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∏–¥–µ–∏
    test_ideas = [
        # –û–¥–æ–±—Ä–µ–Ω–Ω—ã–µ –∏–¥–µ–∏
        (user_ids[111111111], '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –º–∞—Ä—à—Ä—É—Ç–æ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏', 
         '–°–Ω–∏–∂–µ–Ω–∏–µ –ø—Ä–æ–±–µ–≥–∞ –Ω–∞ 15% –∏ –≤—Ä–µ–º–µ–Ω–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –Ω–∞ 20%', '', False, 'approved', 50000, 
         '–û—Ç–ª–∏—á–Ω–∞—è –∏–¥–µ—è! –†–µ–∞–ª–∏–∑—É–µ–º –≤ —Å–ª–µ–¥—É—é—â–µ–º –∫–≤–∞—Ä—Ç–∞–ª–µ', '2024-01-15', '2024-01-20'),
        
        # –ò–¥–µ–∏ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ (status = 'pending')
        (user_ids[222222222], '–í–Ω–µ–¥—Ä–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É—á–µ—Ç–∞ —Ç–æ–ø–ª–∏–≤–∞', 
         '–°–Ω–∏–∂–µ–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–∞ —Ç–æ–ø–ª–∏–≤–∞ –Ω–∞ 8% –∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Ñ–∞–∫—Ç–æ—Ä–∞', '', False, 'pending', 
         None, None, '2024-01-16', None),
        
        (user_ids[333333333], '–°–∏—Å—Ç–µ–º–∞ –º–æ—Ç–∏–≤–∞—Ü–∏–∏ –¥–ª—è –≤–æ–¥–∏—Ç–µ–ª–µ–π', 
         '–ü–æ–≤—ã—à–µ–Ω–∏–µ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ –∏ —Å–Ω–∏–∂–µ–Ω–∏–µ —Ç–µ–∫—É—á–∫–∏ –∫–∞–¥—Ä–æ–≤', '', True, 'pending', 
         None, None, '2024-01-17', None),
    ]
    
    print("üí° –î–æ–±–∞–≤–ª—è–µ–º –∏–¥–µ–∏...")
    cursor.executemany('''
        INSERT INTO ideas (user_id, description, justification, evidence_link, is_anonymous, 
                          status, saved_amount, moderator_comment, created_at, approved_at)
        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
    ''', test_ideas)
    

def get_db_connection():
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    conn = sqlite3.connect('ideas.db')
    conn.row_factory = sqlite3.Row
    return conn

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
def get_or_create_user(telegram_id, first_name, username):
    """–ü–æ–ª—É—á–∏—Ç—å –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    conn = get_db_connection()
    cursor = conn.cursor()
    
    cursor.execute('''
        INSERT OR IGNORE INTO users (telegram_id, first_name, username)
        VALUES (?, ?, ?)
    ''', (telegram_id, first_name, username))
    
    cursor.execute('SELECT * FROM users WHERE telegram_id = ?', (telegram_id,))
    user = cursor.fetchone()
    
    conn.commit()
    conn.close()
    return user

def get_user_by_telegram_id(telegram_id):
    """–ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ telegram_id"""
    conn = get_db_connection()
    cursor = conn.cursor()
    
    cursor.execute('SELECT * FROM users WHERE telegram_id = ?', (telegram_id,))
    user = cursor.fetchone()
    
    conn.close()
    return user


def create_idea(user_id, description, justification, evidence_link, is_anonymous):
    """–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∏–¥–µ—é"""
    conn = get_db_connection()
    cursor = conn.cursor()
    
    cursor.execute('''
        SELECT id FROM ideas 
        WHERE user_id = ? AND description = ? AND status = 'pending'
    ''', (user_id, description))
    
    existing_idea = cursor.fetchone()
    if existing_idea:
        conn.close()
        return existing_idea['id']
    
    cursor.execute('''
        INSERT INTO ideas (user_id, description, justification, evidence_link, is_anonymous)
        VALUES (?, ?, ?, ?, ?)
    ''', (user_id, description, justification, evidence_link, is_anonymous))
    
    idea_id = cursor.lastrowid
    conn.commit()
    conn.close()
    
    return idea_id


def get_user_ideas(telegram_id):
    """–ü–æ–ª—É—á–∏—Ç—å –∏–¥–µ–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    conn = get_db_connection()
    cursor = conn.cursor()
    
    cursor.execute('''
        SELECT i.*, u.first_name, u.username 
        FROM ideas i 
        JOIN users u ON i.user_id = u.id 
        WHERE u.telegram_id = ?
        ORDER BY i.created_at DESC
    ''', (telegram_id,))
    
    ideas = cursor.fetchall()
    conn.close()
    return ideas

def get_all_ideas():
    """–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∏–¥–µ–∏ (–¥–ª—è –∞–¥–º–∏–Ω–∫–∏)"""
    conn = get_db_connection()
    cursor = conn.cursor()
    
    cursor.execute('''
        SELECT i.*, u.first_name, u.username 
        FROM ideas i 
        JOIN users u ON i.user_id = u.id 
        ORDER BY i.created_at DESC
    ''')
    
    ideas = cursor.fetchall()
    conn.close()
    return ideas

def get_pending_ideas():
    """–ü–æ–ª—É—á–∏—Ç—å –∏–¥–µ–∏ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏"""
    conn = get_db_connection()
    cursor = conn.cursor()
    
    cursor.execute('''
        SELECT i.*, u.first_name, u.username 
        FROM ideas i 
        JOIN users u ON i.user_id = u.id 
        WHERE i.status = 'pending'
        ORDER BY i.created_at DESC
    ''')
    
    ideas = cursor.fetchall()
    conn.close()
    
    return ideas

def update_idea_status(idea_id, status, saved_amount=None, moderator_comment=None):
    """–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∏–¥–µ–∏"""
    conn = get_db_connection()
    cursor = conn.cursor()
    
    if status == 'approved':
        cursor.execute('''
            UPDATE ideas 
            SET status = ?, saved_amount = ?, moderator_comment = ?, approved_at = CURRENT_TIMESTAMP
            WHERE id = ?
        ''', (status, saved_amount, moderator_comment, idea_id))
    else:
        cursor.execute('''
            UPDATE ideas 
            SET status = ?, moderator_comment = ?
            WHERE id = ?
        ''', (status, moderator_comment, idea_id))
    
    conn.commit()
    conn.close()

def get_top_users():
    """–ü–æ–ª—É—á–∏—Ç—å —Ç–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –æ–¥–æ–±—Ä–µ–Ω–Ω—ã–º –∏–¥–µ—è–º"""
    conn = get_db_connection()
    cursor = conn.cursor()
    
    cursor.execute('''
        SELECT u.first_name, COUNT(i.id) as approved_ideas
        FROM users u 
        LEFT JOIN ideas i ON u.id = i.user_id AND i.status = 'approved'
        GROUP BY u.id, u.first_name
        HAVING approved_ideas > 0
        ORDER BY approved_ideas DESC
        LIMIT 10
    ''')
    
    users = cursor.fetchall()
    conn.close()
    return users


def add_test_data(cursor):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    test_users = [
        (111111111, '–ê—Ä—Å–µ–Ω–∏–π –ú–æ–∏—Å–µ–µ–≤', 'arseny_m', True),
        (222222222, '–î–º–∏—Ç—Ä–∏–π –ú—É—Ä–∑–∞–µ–≤', 'dmitry_m', False),
        (333333333, '–ü–æ–ª–∏–∫–∞—Ä–ø–æ–≤–∞ –¢–∞–∏—Å–∏—è', 'taisiya_p', False),
        (444444444, '–í–ª–∞–¥–∏–º–∏—Ä –ú–∏—Ä–æ—à–Ω–∏–∫', 'vladimir_m', False),
        (555555555, '–°–µ—Ä–≥–µ–π –ë—ã—Å—Ç—Ä–æ–≤', 'sergey_b', False)
    ]
    
    cursor.executemany('''
        INSERT OR IGNORE INTO users (telegram_id, first_name, username, is_moderator)
        VALUES (?, ?, ?, ?)
    ''', test_users)
    
    # –ü–æ–ª—É—á–∞–µ–º ID –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    cursor.execute('SELECT id FROM users WHERE telegram_id = ?', (111111111,))
    user_111 = cursor.fetchone()
    if user_111:
        moderator_id = user_111[0]
        print(f"–ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 111111111 —Å ID: {moderator_id}")
    else:
        print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 111111111 –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    cursor.execute('SELECT id FROM users WHERE telegram_id = ?', (222222222,))
    user_222 = cursor.fetchone()
    employee1_id = user_222[0] if user_222 else None
    
    cursor.execute('SELECT id FROM users WHERE telegram_id = ?', (333333333,))
    user_333 = cursor.fetchone()
    employee2_id = user_333[0] if user_333 else None
    
    test_ideas = [
        # –ò–¥–µ–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 111111111 (–ê—Ä—Å–µ–Ω–∏–π –ú–æ–∏—Å–µ–µ–≤)
        (moderator_id, '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –º–∞—Ä—à—Ä—É—Ç–æ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏ –≤ —Å–µ–≤–µ—Ä–Ω–æ–º —Ä–µ–≥–∏–æ–Ω–µ', 
         '–°–Ω–∏–∂–µ–Ω–∏–µ –ø—Ä–æ–±–µ–≥–∞ –Ω–∞ 15% –∏ –≤—Ä–µ–º–µ–Ω–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –Ω–∞ 20%', '', False, 'approved', 50000, 
         '–û—Ç–ª–∏—á–Ω–∞—è –∏–¥–µ—è! –†–µ–∞–ª–∏–∑—É–µ–º –≤ —Å–ª–µ–¥—É—é—â–µ–º –∫–≤–∞—Ä—Ç–∞–ª–µ', '2024-01-15', '2024-01-20'),
        
        (moderator_id, '–í–Ω–µ–¥—Ä–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É—á–µ—Ç–∞ —Ç–æ–ø–ª–∏–≤–∞', 
         '–°–Ω–∏–∂–µ–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–∞ —Ç–æ–ø–ª–∏–≤–∞ –Ω–∞ 8% –∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Ñ–∞–∫—Ç–æ—Ä–∞', '', True, 'pending', 
         None, None, '2024-01-16', None),
        
        # –ò–¥–µ–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 222222222 (–î–º–∏—Ç—Ä–∏–π –ú—É—Ä–∑–∞–µ–≤)
        (employee1_id, '–ï–¥–∏–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–æ–±–æ—Ä–æ—Ç–∞ –¥–ª—è –≤—Å–µ—Ö —Ñ–∏–ª–∏–∞–ª–æ–≤', 
         '–£—Å–∫–æ—Ä–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–æ–≤ –Ω–∞ 30% –∏ —Å–Ω–∏–∂–µ–Ω–∏–µ –æ—à–∏–±–æ–∫', '', False, 'approved', 25000, 
         '–•–æ—Ä–æ—à–∞—è –∏–¥–µ—è, –Ω–æ —Ç—Ä–µ–±—É–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏', '2024-01-14', '2024-01-18'),
        
        # –ò–¥–µ–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 333333333 (–ü–æ–ª–∏–∫–∞—Ä–ø–æ–≤–∞ –¢–∞–∏—Å–∏—è)
        (employee2_id, '–°–∏—Å—Ç–µ–º–∞ –º–æ—Ç–∏–≤–∞—Ü–∏–∏ –¥–ª—è –≤–æ–¥–∏—Ç–µ–ª–µ–π', 
         '–ü–æ–≤—ã—à–µ–Ω–∏–µ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ –∏ —Å–Ω–∏–∂–µ–Ω–∏–µ —Ç–µ–∫—É—á–∫–∏ –∫–∞–¥—Ä–æ–≤', '', False, 'pending', 
         None, None, '2024-01-17', None)
    ]
    
    cursor.executemany('''
        INSERT INTO ideas (user_id, description, justification, evidence_link, is_anonymous, 
                          status, saved_amount, moderator_comment, created_at, approved_at)
        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
    ''', test_ideas)